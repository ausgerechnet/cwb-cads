{
  "components": {
    "schemas": {
      "AnnotationsOut": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value_type": {
            "enum": [
              "datetime",
              "numeric",
              "boolean",
              "unicode"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "BreakdownItemsOut": {
        "properties": {
          "breakdown_id": {
            "type": "integer"
          },
          "freq": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "ipm": {
            "type": "number"
          },
          "item": {
            "type": "string"
          },
          "nr_tokens": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "BreakdownOut": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/BreakdownItemsOut"
            },
            "type": "array"
          },
          "p": {
            "type": "string"
          },
          "query_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CollocationIdsIn": {
        "properties": {
          "collocation_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CollocationItemOut": {
        "properties": {
          "item": {
            "type": "string"
          },
          "scores": {
            "items": {
              "$ref": "#/components/schemas/CollocationScoreOut"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CollocationItemsOut": {
        "properties": {
          "coordinates": {
            "items": {
              "$ref": "#/components/schemas/CoordinatesOut"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/CollocationItemOut"
            },
            "type": "array"
          },
          "nr_items": {
            "type": "integer"
          },
          "page_count": {
            "type": "integer"
          },
          "page_number": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "sort_by": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CollocationOut": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "marginals": {
            "enum": [
              "local",
              "global"
            ],
            "type": "string"
          },
          "nr_items": {
            "type": "integer"
          },
          "p": {
            "type": "string"
          },
          "s_break": {
            "type": "string"
          },
          "semantic_map_id": {
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CollocationPatchIn": {
        "properties": {
          "semantic_map_id": {
            "default": null,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CollocationScoreOut": {
        "properties": {
          "measure": {
            "type": "string"
          },
          "score": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "ConcordanceLineOut": {
        "properties": {
          "discourseme_ranges": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeRangeOut"
            },
            "type": "array"
          },
          "match_id": {
            "type": "integer"
          },
          "structural": {
            "type": "object"
          },
          "tokens": {
            "items": {
              "$ref": "#/components/schemas/TokenOut"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConcordanceOut": {
        "properties": {
          "lines": {
            "items": {
              "$ref": "#/components/schemas/ConcordanceLineOut"
            },
            "type": "array"
          },
          "nr_lines": {
            "type": "integer"
          },
          "page_count": {
            "type": "integer"
          },
          "page_number": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ConstellationCollocationIn": {
        "properties": {
          "filter_discourseme_ids": {
            "default": [],
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "filter_item": {
            "nullable": true,
            "type": "string"
          },
          "filter_item_p_att": {
            "default": "lemma",
            "type": "string"
          },
          "focus_discourseme_id": {
            "type": "integer"
          },
          "marginals": {
            "default": "local",
            "enum": [
              "local",
              "global"
            ],
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "s_break": {
            "type": "string"
          },
          "semantic_map_id": {
            "type": "integer"
          },
          "window": {
            "default": 10,
            "type": "integer"
          }
        },
        "required": [
          "focus_discourseme_id",
          "p"
        ],
        "type": "object"
      },
      "ConstellationCollocationItemsOut": {
        "properties": {
          "coordinates": {
            "items": {
              "$ref": "#/components/schemas/CoordinatesOut"
            },
            "nullable": true,
            "type": "array"
          },
          "discourseme_coordinates": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeCoordinatesOut"
            },
            "nullable": true,
            "type": "array"
          },
          "discourseme_scores": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeScoresOut"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/CollocationItemOut"
            },
            "type": "array"
          },
          "nr_items": {
            "type": "integer"
          },
          "page_count": {
            "type": "integer"
          },
          "page_number": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "sort_by": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConstellationDescriptionIn": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "match_strategy": {
            "default": "longest",
            "enum": [
              "longest",
              "shortest",
              "standard"
            ],
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "s": {
            "type": "string"
          },
          "subcorpus_id": {
            "type": "integer"
          }
        },
        "required": [
          "corpus_id"
        ],
        "type": "object"
      },
      "ConstellationDescriptionOut": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "discourseme_descriptions": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeDescriptionOut"
            },
            "type": "array"
          },
          "discourseme_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "match_strategy": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "s": {
            "type": "string"
          },
          "semantic_map_id": {
            "type": "integer"
          },
          "subcorpus_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ConstellationDescriptionOutUpdate": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "discourseme_descriptions": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeDescriptionOut"
            },
            "type": "array"
          },
          "discourseme_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "match_strategy": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "s": {
            "type": "string"
          },
          "semantic_map_id": {
            "type": "integer"
          },
          "subcorpus_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ConstellationDiscoursemeDescriptionIn": {
        "properties": {
          "discourseme_description_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ConstellationIn": {
        "properties": {
          "comment": {
            "type": "string"
          },
          "discourseme_ids": {
            "default": [],
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConstellationInUpdate": {
        "properties": {
          "comment": {
            "type": "string"
          },
          "discourseme_ids": {
            "default": [],
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConstellationKeywordIn": {
        "properties": {
          "corpus_id_reference": {
            "type": "integer"
          },
          "min_freq": {
            "default": 3,
            "type": "integer"
          },
          "p_reference": {
            "default": "lemma",
            "type": "string"
          },
          "semantic_map_id": {
            "default": null,
            "nullable": true,
            "type": "integer"
          },
          "sub_vs_rest": {
            "default": true,
            "type": "boolean"
          },
          "subcorpus_id_reference": {
            "default": null,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "corpus_id_reference"
        ],
        "type": "object"
      },
      "ConstellationKeywordItemsOut": {
        "properties": {
          "coordinates": {
            "items": {
              "$ref": "#/components/schemas/CoordinatesOut"
            },
            "nullable": true,
            "type": "array"
          },
          "discourseme_coordinates": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeCoordinatesOut"
            },
            "nullable": true,
            "type": "array"
          },
          "discourseme_scores": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeScoresOut"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/KeywordItemOut"
            },
            "type": "array"
          },
          "nr_items": {
            "type": "integer"
          },
          "page_count": {
            "type": "integer"
          },
          "page_number": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "sort_by": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConstellationOut": {
        "properties": {
          "comment": {
            "nullable": true,
            "type": "string"
          },
          "discoursemes": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeOut"
            },
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CoordinatesIn": {
        "properties": {
          "item": {
            "type": "string"
          },
          "x_user": {
            "default": null,
            "nullable": true,
            "type": "number"
          },
          "y_user": {
            "default": null,
            "nullable": true,
            "type": "number"
          }
        },
        "required": [
          "item"
        ],
        "type": "object"
      },
      "CoordinatesOut": {
        "properties": {
          "item": {
            "type": "string"
          },
          "semantic_map_id": {
            "type": "integer"
          },
          "x": {
            "type": "number"
          },
          "x_user": {
            "type": "number"
          },
          "y": {
            "type": "number"
          },
          "y_user": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "CorpusOut": {
        "properties": {
          "cwb_id": {
            "type": "string"
          },
          "description": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "language": {
            "nullable": true,
            "type": "string"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "p_atts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "register": {
            "nullable": true,
            "type": "string"
          },
          "s_annotations": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "s_atts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiscoursemeCoordinatesIn": {
        "properties": {
          "discourseme_id": {
            "type": "integer"
          },
          "x_user": {
            "type": "number"
          },
          "y_user": {
            "type": "number"
          }
        },
        "required": [
          "discourseme_id"
        ],
        "type": "object"
      },
      "DiscoursemeCoordinatesOut": {
        "properties": {
          "discourseme_id": {
            "type": "integer"
          },
          "semantic_map_id": {
            "type": "integer"
          },
          "x": {
            "type": "number"
          },
          "x_user": {
            "type": "number"
          },
          "y": {
            "type": "number"
          },
          "y_user": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "DiscoursemeDescriptionIn": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "match_strategy": {
            "default": "longest",
            "enum": [
              "longest",
              "shortest",
              "standard"
            ],
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "s": {
            "type": "string"
          },
          "subcorpus_id": {
            "type": "integer"
          }
        },
        "required": [
          "corpus_id"
        ],
        "type": "object"
      },
      "DiscoursemeDescriptionItem": {
        "properties": {
          "item": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DiscoursemeDescriptionOut": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "discourseme_id": {
            "type": "integer"
          },
          "id": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeDescriptionItem"
            },
            "type": "array"
          },
          "match_strategy": {
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "query_id": {
            "type": "integer"
          },
          "s": {
            "type": "string"
          },
          "semantic_map_id": {
            "type": "integer"
          },
          "subcorpus_id": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DiscoursemeIn": {
        "properties": {
          "comment": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "template": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeTemplateItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiscoursemeInUpdate": {
        "properties": {
          "comment": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "template": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeTemplateItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiscoursemeOut": {
        "properties": {
          "comment": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "template": {
            "items": {
              "$ref": "#/components/schemas/DiscoursemeTemplateItem"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiscoursemeRangeOut": {
        "properties": {
          "discourseme_id": {
            "type": "integer"
          },
          "end": {
            "type": "integer"
          },
          "start": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DiscoursemeScoresOut": {
        "properties": {
          "discourseme_id": {
            "type": "integer"
          },
          "global_scores": {
            "items": {
              "$ref": "#/components/schemas/CollocationScoreOut"
            },
            "type": "array"
          },
          "item_scores": {
            "items": {
              "$ref": "#/components/schemas/CollocationItemOut"
            },
            "type": "array"
          },
          "unigram_item_scores": {
            "items": {
              "$ref": "#/components/schemas/CollocationItemOut"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DiscoursemeTemplateItem": {
        "properties": {
          "cqp_query": {
            "nullable": true,
            "type": "string"
          },
          "p": {
            "nullable": true,
            "type": "string"
          },
          "surface": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPError": {
        "properties": {
          "detail": {
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPRefreshTokenIn": {
        "properties": {
          "refresh_token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "HTTPTokenOut": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeywordIn": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "corpus_id_reference": {
            "type": "integer"
          },
          "min_freq": {
            "default": 3,
            "type": "integer"
          },
          "p": {
            "default": "lemma",
            "type": "string"
          },
          "p_reference": {
            "default": "lemma",
            "type": "string"
          },
          "semantic_map_id": {
            "default": null,
            "nullable": true,
            "type": "integer"
          },
          "sub_vs_rest": {
            "default": true,
            "type": "boolean"
          },
          "subcorpus_id": {
            "default": null,
            "nullable": true,
            "type": "integer"
          },
          "subcorpus_id_reference": {
            "default": null,
            "nullable": true,
            "type": "integer"
          }
        },
        "required": [
          "corpus_id",
          "corpus_id_reference"
        ],
        "type": "object"
      },
      "KeywordItemOut": {
        "properties": {
          "item": {
            "type": "string"
          },
          "scores": {
            "items": {
              "$ref": "#/components/schemas/KeywordScoreOut"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "KeywordItemsOut": {
        "properties": {
          "coordinates": {
            "items": {
              "$ref": "#/components/schemas/CoordinatesOut"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/KeywordItemOut"
            },
            "type": "array"
          },
          "nr_items": {
            "type": "integer"
          },
          "page_count": {
            "type": "integer"
          },
          "page_number": {
            "type": "integer"
          },
          "page_size": {
            "type": "integer"
          },
          "sort_by": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeywordOut": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "corpus_id_reference": {
            "type": "integer"
          },
          "corpus_name": {
            "type": "string"
          },
          "corpus_name_reference": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "min_freq": {
            "type": "integer"
          },
          "nr_items": {
            "type": "integer"
          },
          "p": {
            "type": "string"
          },
          "p_reference": {
            "type": "string"
          },
          "semantic_map_id": {
            "nullable": true,
            "type": "integer"
          },
          "sub_vs_rest": {
            "type": "boolean"
          },
          "subcorpus_id": {
            "type": "integer"
          },
          "subcorpus_id_reference": {
            "type": "integer"
          },
          "subcorpus_name": {
            "type": "string"
          },
          "subcorpus_name_reference": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "KeywordPatchIn": {
        "properties": {
          "constellation_id": {
            "default": null,
            "nullable": true,
            "type": "integer"
          },
          "semantic_map_id": {
            "default": null,
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "KeywordScoreOut": {
        "properties": {
          "measure": {
            "type": "string"
          },
          "score": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "MetaFrequenciesOut": {
        "properties": {
          "nr_spans": {
            "type": "integer"
          },
          "nr_tokens": {
            "type": "integer"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetaIn": {
        "properties": {
          "key": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "value_type": {
            "enum": [
              "datetime",
              "numeric",
              "boolean",
              "unicode"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MetaOut": {
        "properties": {
          "annotations": {
            "items": {
              "$ref": "#/components/schemas/AnnotationsOut"
            },
            "type": "array"
          },
          "level": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryAssistedIn": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "escape": {
            "type": "boolean"
          },
          "ignore_case": {
            "type": "boolean"
          },
          "ignore_diacritics": {
            "type": "boolean"
          },
          "items": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "match_strategy": {
            "enum": [
              "longest",
              "shortest",
              "standard"
            ],
            "type": "string"
          },
          "p": {
            "type": "string"
          },
          "s": {
            "type": "string"
          },
          "subcorpus_id": {
            "type": "integer"
          }
        },
        "required": [
          "corpus_id",
          "items",
          "p"
        ],
        "type": "object"
      },
      "QueryIn": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "cqp_query": {
            "type": "string"
          },
          "match_strategy": {
            "enum": [
              "longest",
              "shortest",
              "standard"
            ],
            "type": "string"
          },
          "s": {
            "type": "string"
          },
          "subcorpus_id": {
            "type": "integer"
          }
        },
        "required": [
          "corpus_id",
          "cqp_query"
        ],
        "type": "object"
      },
      "QueryMetaOut": {
        "properties": {
          "frequency": {
            "type": "integer"
          },
          "ipm": {
            "type": "number"
          },
          "item": {
            "type": "string"
          },
          "nr_texts": {
            "type": "integer"
          },
          "nr_tokens": {
            "type": "integer"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryOut": {
        "properties": {
          "corpus_id": {
            "type": "integer"
          },
          "corpus_name": {
            "type": "string"
          },
          "cqp_query": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "match_strategy": {
            "type": "string"
          },
          "random_seed": {
            "type": "integer"
          },
          "subcorpus_id": {
            "nullable": true,
            "type": "integer"
          },
          "subcorpus_name": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "SemanticMapOut": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "p": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SubCorpusIn": {
        "properties": {
          "create_nqr": {
            "default": true,
            "type": "boolean"
          },
          "description": {
            "nullable": true,
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value_boolean": {
            "nullable": true,
            "type": "boolean"
          },
          "values_numeric": {
            "items": {
              "type": "number"
            },
            "nullable": true,
            "type": "array"
          },
          "values_unicode": {
            "items": {
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SubCorpusOut": {
        "properties": {
          "corpus": {
            "$ref": "#/components/schemas/CorpusOut"
          },
          "description": {
            "nullable": true,
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "nullable": true,
            "type": "string"
          },
          "nqr_cqp": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "TokenOut": {
        "properties": {
          "cpos": {
            "type": "integer"
          },
          "is_filter_item": {
            "type": "boolean"
          },
          "offset": {
            "type": "integer"
          },
          "out_of_window": {
            "type": "boolean"
          },
          "primary": {
            "type": "string"
          },
          "secondary": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserIn": {
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "username"
        ],
        "type": "object"
      },
      "UserOut": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username"
        ],
        "type": "object"
      },
      "UserRegister": {
        "properties": {
          "confirm_password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "confirm_password",
          "password",
          "username"
        ],
        "type": "object"
      },
      "UserUpdate": {
        "properties": {
          "confirm_password": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "old_password": {
            "type": "string"
          }
        },
        "required": [
          "confirm_password",
          "new_password",
          "old_password"
        ],
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "detail": {
            "properties": {
              "<location>": {
                "properties": {
                  "<field_name>": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "externalDocs": {
    "description": "GitHub repository",
    "url": "https://github.com/ausgerechnet/cwb-cads"
  },
  "info": {
    "contact": {
      "email": "philipp.heinrich@fau.de",
      "name": "Philipp Heinrich",
      "url": "https://philipp-heinrich.eu"
    },
    "description": "cwb-cads: CWB-based API for Corpus-Assisted Discourse Studies",
    "title": "cwb-cads",
    "version": "0.3.0.dev3"
  },
  "openapi": "3.0.2",
  "paths": {
    "/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Redirect to API docs.",
        "tags": [
          "Easter Eggs"
        ]
      }
    },
    "/collocation/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CollocationOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all collocations.",
        "tags": [
          "Collocation"
        ]
      }
    },
    "/collocation/{id}/": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete collocation.",
        "tags": [
          "Collocation"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollocationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get one collocation analysis.",
        "tags": [
          "Collocation"
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollocationPatchIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollocationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch a collocation analysis. Use for updating semantic map.",
        "tags": [
          "Collocation"
        ]
      }
    },
    "/collocation/{id}/items": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "descending",
              "enum": [
                "ascending",
                "descending"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "conservative_log_ratio",
              "enum": [
                "conservative_log_ratio",
                "O11",
                "E11",
                "ipm",
                "ipm_expected",
                "log_likelihood",
                "z_score",
                "t_score",
                "simple_ll",
                "dice",
                "log_ratio",
                "min_sensitivity",
                "liddell",
                "mutual_information",
                "local_mutual_information"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollocationItemsOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get scored items of collocation analysis.",
        "tags": [
          "Collocation"
        ]
      }
    },
    "/collocation/{id}/semantic-map/": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "semantic_map_id",
            "required": false,
            "schema": {
              "default": null,
              "nullable": true,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticMapOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create new semantic map for collocation items or make sure there are coordinates for all items on an existing map.",
        "tags": [
          "Collocation"
        ]
      }
    },
    "/corpus/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CorpusOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all corpora.",
        "tags": [
          "Corpus"
        ]
      }
    },
    "/corpus/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorpusOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get details of a corpus.",
        "tags": [
          "Corpus"
        ]
      }
    },
    "/corpus/{id}/meta/": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MetaOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get meta data of corpus.",
        "tags": [
          "Corpus"
        ]
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MetaIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationsOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Set meta data of corpus from encoded s-attribute.",
        "tags": [
          "Corpus"
        ]
      }
    },
    "/corpus/{id}/meta/frequencies": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "level",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "key",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MetaFrequenciesOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get frequencies of segmentation span annotations.",
        "tags": [
          "Corpus"
        ]
      }
    },
    "/corpus/{id}/subcorpus/": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SubCorpusOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all subcorpora of a corpus.",
        "tags": [
          "Corpus"
        ]
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubCorpusIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubCorpusOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create subcorpus from stored meta data.",
        "tags": [
          "Corpus"
        ]
      }
    },
    "/corpus/{id}/subcorpus/{subcorpus_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "subcorpus_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubCorpusOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all details of subcorpus.",
        "tags": [
          "Corpus"
        ]
      }
    },
    "/hello": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          }
        },
        "summary": "Say hello.",
        "tags": [
          "Easter Eggs"
        ]
      }
    },
    "/keyword/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/KeywordOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all keyword analyses.",
        "tags": [
          "Keyword"
        ]
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create keyword analysis.",
        "tags": [
          "Keyword"
        ]
      }
    },
    "/keyword/{id}/": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete keyword analysis.",
        "tags": [
          "Keyword"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get one keyword analysis.",
        "tags": [
          "Keyword"
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordPatchIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch a keyword analysis. Use for updating semantic map.",
        "tags": [
          "Keyword"
        ]
      }
    },
    "/keyword/{id}/items": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "descending",
              "enum": [
                "ascending",
                "descending"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "conservative_log_ratio",
              "enum": [
                "conservative_log_ratio",
                "O11",
                "E11",
                "ipm",
                "ipm_expected",
                "log_likelihood",
                "z_score",
                "t_score",
                "simple_ll",
                "dice",
                "log_ratio",
                "min_sensitivity",
                "liddell",
                "mutual_information",
                "local_mutual_information"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordItemsOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get scored items of a keyword analysis.",
        "tags": [
          "Keyword"
        ]
      }
    },
    "/keyword/{id}/semantic-map/": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "semantic_map_id",
            "required": false,
            "schema": {
              "default": null,
              "nullable": true,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create new semantic map for keyword items or associate with existing semantic map.",
        "tags": [
          "Keyword"
        ]
      }
    },
    "/mmda/constellation/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConstellationOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all constellations.",
        "tags": [
          "Mmda.Constellation"
        ]
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create new constellation.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete constellation.",
        "tags": [
          "Mmda.Constellation"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get details of constellation.",
        "tags": [
          "Mmda.Constellation"
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationInUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch constellation.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/add-discourseme": {
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationInUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch constellation.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConstellationDescriptionOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get All Descriptions",
        "tags": [
          "Mmda.Constellation"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationDescriptionIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationDescriptionOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create description of constellation in corpus. Makes sure individual discourseme descriptions exist.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Description",
        "tags": [
          "Mmda.Constellation"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationDescriptionOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Description",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/add-discourseme": {
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationDiscoursemeDescriptionIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationDescriptionOutUpdate"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch Description Add",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/collocation/": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationCollocationIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollocationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create collocation analysis of constellation in corpus.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/collocation/{collocation_id}/auto-associate": {
      "put": {
        "description": "Output: DiscoursemeDescription(many=True)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "collocation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "automatically associate discoursemes that occur in the top collocational profile with this constellation",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/collocation/{collocation_id}/items": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "collocation_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "descending",
              "enum": [
                "ascending",
                "descending"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "conservative_log_ratio",
              "enum": [
                "conservative_log_ratio",
                "O11",
                "E11",
                "ipm",
                "ipm_expected",
                "log_likelihood",
                "z_score",
                "t_score",
                "simple_ll",
                "dice",
                "log_ratio",
                "min_sensitivity",
                "liddell",
                "mutual_information",
                "local_mutual_information"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationCollocationItemsOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get scored items of collocation analysis.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/concordance/": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "filter_discourseme_ids",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "in": "query",
            "name": "focus_discourseme_id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "window",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "extended_window",
            "required": false,
            "schema": {
              "default": 50,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "primary",
            "required": false,
            "schema": {
              "default": "word",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "secondary",
            "required": false,
            "schema": {
              "default": "lemma",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "random",
              "enum": [
                "first",
                "random",
                "ascending",
                "descending"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by_offset",
            "required": false,
            "schema": {
              "default": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_by_p_att",
            "required": false,
            "schema": {
              "default": null,
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by_s_att",
            "required": false,
            "schema": {
              "default": null,
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter_item",
            "required": false,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter_item_p_att",
            "required": false,
            "schema": {
              "default": "lemma",
              "type": "string"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "filter_query_ids",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "highlight_query_ids",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcordanceOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get concordance lines of constellation in corpus. Redirects to query endpoint.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/keyword/": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationKeywordIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordOut"
                }
              }
            },
            "description": "Successful response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Create Keyword",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/keyword/{keyword_id}/auto-associate": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "keyword_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "automatically associate discoursemes that occur in the top collocational profile with this constellation",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/keyword/{keyword_id}/items": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "keyword_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "descending",
              "enum": [
                "ascending",
                "descending"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by",
            "required": false,
            "schema": {
              "default": "conservative_log_ratio",
              "enum": [
                "conservative_log_ratio",
                "O11",
                "E11",
                "ipm",
                "ipm_expected",
                "log_likelihood",
                "z_score",
                "t_score",
                "simple_ll",
                "dice",
                "log_ratio",
                "min_sensitivity",
                "liddell",
                "mutual_information",
                "local_mutual_information"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationKeywordItemsOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get scored items of collocation analysis.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/remove-discourseme": {
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationDiscoursemeDescriptionIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationDescriptionOutUpdate"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch Description Remove",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/description/{description_id}/semantic_map/{semantic_map_id}/coordinates/": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "semantic_map_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DiscoursemeCoordinatesOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get discourseme coordinates.",
        "tags": [
          "Mmda.Constellation"
        ]
      },
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "semantic_map_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoursemeCoordinatesIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DiscoursemeCoordinatesOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Set coordinates of a discourseme.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/constellation/{id}/remove-discourseme": {
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConstellationInUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstellationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch constellation.",
        "tags": [
          "Mmda.Constellation"
        ]
      }
    },
    "/mmda/discourseme/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DiscoursemeOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all discoursemes.",
        "tags": [
          "Mmda.Discourseme"
        ]
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoursemeIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoursemeOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create new discourseme.",
        "tags": [
          "Mmda.Discourseme"
        ]
      }
    },
    "/mmda/discourseme/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete discourseme.",
        "tags": [
          "Mmda.Discourseme"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoursemeOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get details of discourseme.",
        "tags": [
          "Mmda.Discourseme"
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoursemeInUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoursemeOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch discourseme.",
        "tags": [
          "Mmda.Discourseme"
        ]
      }
    },
    "/mmda/discourseme/{id}/description/": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DiscoursemeDescriptionOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get All Descriptions",
        "tags": [
          "Mmda.Discourseme"
        ]
      },
      "post": {
        "description": "Will automatically create query (from template / description) if it doesn't exist.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoursemeDescriptionIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoursemeDescriptionOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create description of discourseme in corpus.",
        "tags": [
          "Mmda.Discourseme"
        ]
      }
    },
    "/mmda/discourseme/{id}/description/{description_id}/": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Description",
        "tags": [
          "Mmda.Discourseme"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoursemeDescriptionOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Description",
        "tags": [
          "Mmda.Discourseme"
        ]
      }
    },
    "/mmda/discourseme/{id}/description/{description_id}/add-item": {
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoursemeDescriptionItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoursemeDescriptionOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch discourseme: add item to description.",
        "tags": [
          "Mmda.Discourseme"
        ]
      }
    },
    "/mmda/discourseme/{id}/description/{description_id}/remove-item": {
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "description_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DiscoursemeDescriptionItem"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DiscoursemeDescriptionOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Patch discourseme: remove item from description.",
        "tags": [
          "Mmda.Discourseme"
        ]
      }
    },
    "/query/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QueryOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all queries.",
        "tags": [
          "Query"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "execute",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create new query.",
        "tags": [
          "Query"
        ]
      }
    },
    "/query/assisted/": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "execute",
            "required": false,
            "schema": {
              "default": true,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryAssistedIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create new query in assisted mode.",
        "tags": [
          "Query"
        ]
      }
    },
    "/query/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete query.",
        "tags": [
          "Query"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get details of query.",
        "tags": [
          "Query"
        ]
      }
    },
    "/query/{query_id}/breakdown": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "p",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakdownOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get breakdown of query. Will create if it doesn't exist.",
        "tags": [
          "Query"
        ]
      }
    },
    "/query/{query_id}/collocation": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "semantic_map_id",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "p",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "window",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "s_break",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "marginals",
            "required": false,
            "schema": {
              "default": "local",
              "enum": [
                "local",
                "global"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter_item",
            "required": false,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter_item_p_att",
            "required": false,
            "schema": {
              "default": "lemma",
              "type": "string"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "filter_discourseme_ids",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollocationOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get collocation of query. Will create if doesn't exist.",
        "tags": [
          "Query"
        ]
      }
    },
    "/query/{query_id}/concordance": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "window",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "extended_window",
            "required": false,
            "schema": {
              "default": 50,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "primary",
            "required": false,
            "schema": {
              "default": "word",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "secondary",
            "required": false,
            "schema": {
              "default": "lemma",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "page_size",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "page_number",
            "required": false,
            "schema": {
              "default": 1,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "default": "random",
              "enum": [
                "first",
                "random",
                "ascending",
                "descending"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by_offset",
            "required": false,
            "schema": {
              "default": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sort_by_p_att",
            "required": false,
            "schema": {
              "default": null,
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sort_by_s_att",
            "required": false,
            "schema": {
              "default": null,
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter_item",
            "required": false,
            "schema": {
              "nullable": true,
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter_item_p_att",
            "required": false,
            "schema": {
              "default": "lemma",
              "type": "string"
            }
          },
          {
            "explode": true,
            "in": "query",
            "name": "filter_query_ids",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          },
          {
            "explode": true,
            "in": "query",
            "name": "highlight_query_ids",
            "required": false,
            "schema": {
              "default": [],
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcordanceOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get concordance lines.",
        "tags": [
          "Query"
        ]
      }
    },
    "/query/{query_id}/concordance/shuffle": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Shuffle concordance lines.",
        "tags": [
          "Query"
        ]
      }
    },
    "/query/{query_id}/concordance/{match_id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "match_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "window",
            "required": false,
            "schema": {
              "default": 10,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "extended_window",
            "required": false,
            "schema": {
              "default": 50,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "extended_context_break",
            "required": false,
            "schema": {
              "default": "text",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "primary",
            "required": false,
            "schema": {
              "default": "word",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "secondary",
            "required": false,
            "schema": {
              "default": "lemma",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConcordanceLineOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get (additional context of) one concordance line.",
        "tags": [
          "Query"
        ]
      }
    },
    "/query/{query_id}/meta": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "query_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "level",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "key",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "p",
            "required": false,
            "schema": {
              "default": "word",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/QueryMetaOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get meta distribution of query.",
        "tags": [
          "Query"
        ]
      }
    },
    "/semantic-map/": {
      "put": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollocationIdsIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticMapOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create semantic map for items in the provided collocation analyses.",
        "tags": [
          "Semantic_Map"
        ]
      }
    },
    "/semantic-map/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete semantic map.",
        "tags": [
          "Semantic_Map"
        ]
      },
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticMapOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get semantic map.",
        "tags": [
          "Semantic_Map"
        ]
      }
    },
    "/semantic-map/{id}/coordinates": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoordinatesOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get coordinates of semantic map.",
        "tags": [
          "Semantic_Map"
        ]
      }
    },
    "/semantic-map/{id}/coordinates/": {
      "put": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CoordinatesIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CoordinatesOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Set coordinates of an item.",
        "tags": [
          "Semantic_Map"
        ]
      }
    },
    "/user/": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserOut"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get all users.",
        "tags": [
          "User"
        ]
      },
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Register new user.",
        "tags": [
          "User"
        ]
      }
    },
    "/user/identify": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Identify who is logged with token",
        "tags": [
          "User"
        ]
      }
    },
    "/user/login": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UserIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPTokenOut"
                }
              }
            },
            "description": "Successful response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Login with name and password to get JWT token",
        "tags": [
          "User"
        ]
      }
    },
    "/user/refresh": {
      "post": {
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HTTPRefreshTokenIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPTokenOut"
                }
              }
            },
            "description": "Successful response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "summary": "Return a new token if the user has a refresh token",
        "tags": [
          "User"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get details of user.",
        "tags": [
          "User"
        ]
      },
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOut"
                }
              }
            },
            "description": "Successful response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Authentication error"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            },
            "description": "Validation error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update details of a user.",
        "tags": [
          "User"
        ]
      }
    }
  },
  "servers": [
    {
      "name": "Development Server",
      "url": "https://corpora.linguistik.uni-erlangen.de/cwb-cads-dev/"
    },
    {
      "name": "Local",
      "url": "http://127.0.0.1:5000/"
    },
    {
      "name": "Production Server",
      "url": "https://corpora.linguistik.uni-erlangen.de/cwb-cads/"
    }
  ],
  "tags": [
    {
      "name": "User"
    },
    {
      "name": "Corpus"
    },
    {
      "name": "Query"
    },
    {
      "name": "Collocation"
    },
    {
      "name": "Semantic_Map"
    },
    {
      "name": "Keyword"
    },
    {
      "name": "Mmda"
    },
    {
      "name": "Mmda.Discourseme"
    },
    {
      "name": "Mmda.Constellation"
    }
  ]
}
