/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as VignetteRouteImport } from './routes/vignette'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AppRouteImport } from './routes/_app'
import { Route as Char42RouteImport } from './routes/*'
import { Route as ComponentsRouteRouteImport } from './routes/components_/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ComponentsWordCloudRouteImport } from './routes/components_/word-cloud'
import { Route as ComponentsTooltipRouteImport } from './routes/components_/tooltip'
import { Route as ComponentsToggleBarRouteImport } from './routes/components_/toggle-bar'
import { Route as ComponentsTimeSeriesRouteImport } from './routes/components_/time-series'
import { Route as ComponentsTableRouteImport } from './routes/components_/table'
import { Route as ComponentsMetaFrequencyRouteImport } from './routes/components_/meta-frequency'
import { Route as ComponentsMeasureRouteImport } from './routes/components_/measure'
import { Route as ComponentsInputRouteImport } from './routes/components_/input'
import { Route as ComponentsGraphRouteImport } from './routes/components_/graph'
import { Route as ComponentsErrorRouteImport } from './routes/components_/error'
import { Route as ComponentsEllipsisRouteImport } from './routes/components_/ellipsis'
import { Route as ComponentsDiscoursemeCollocateTableRouteImport } from './routes/components_/discourseme-collocate-table'
import { Route as ComponentsDiscoursemeBreakdownRouteImport } from './routes/components_/discourseme-breakdown'
import { Route as ComponentsAssociationMatrixRouteImport } from './routes/components_/association-matrix'
import { Route as AppAdminRouteImport } from './routes/_app/admin'
import { Route as AppSubcorporaRouteRouteImport } from './routes/_app/subcorpora/route'
import { Route as AppQueriesRouteRouteImport } from './routes/_app/queries/route'
import { Route as AppPartitionRouteRouteImport } from './routes/_app/partition/route'
import { Route as AppKeywordAnalysisRouteRouteImport } from './routes/_app/keyword-analysis/route'
import { Route as AppDiscoursemesRouteRouteImport } from './routes/_app/discoursemes/route'
import { Route as AppCorporaRouteRouteImport } from './routes/_app/corpora/route'
import { Route as AppConstellationsRouteRouteImport } from './routes/_app/constellations/route'
import { Route as ComponentsWordCloudFullRouteImport } from './routes/components.word-cloud.full'
import { Route as AppSubcorporaNewRouteImport } from './routes/_app/subcorpora_/new'
import { Route as AppSubcorporaSubcorpusIdRouteImport } from './routes/_app/subcorpora_/$subcorpusId'
import { Route as AppQueriesNewRouteImport } from './routes/_app/queries_/new'
import { Route as AppKeywordAnalysisNewRouteImport } from './routes/_app/keyword-analysis_/new'
import { Route as AppDiscoursemesDiscoursemeIdRouteImport } from './routes/_app/discoursemes_/$discoursemeId'
import { Route as AppCorporaCorpusIdRouteImport } from './routes/_app/corpora_/$corpusId'
import { Route as AppConstellationsNewRouteImport } from './routes/_app/constellations_/new'
import { Route as AppQueriesQueryIdRouteRouteImport } from './routes/_app/queries_/$queryId/route'
import { Route as AppKeywordAnalysisAnalysisIdRouteRouteImport } from './routes/_app/keyword-analysis_/$analysisId/route'
import { Route as AppConstellationsConstellationIdRouteRouteImport } from './routes/_app/constellations_/$constellationId/route'
import { Route as AppQueriesQueryIdSemanticMapRouteImport } from './routes/_app/queries_/$queryId/semantic-map'
import { Route as AppKeywordAnalysisAnalysisIdSemanticMapRouteImport } from './routes/_app/keyword-analysis_/$analysisId/semantic-map'
import { Route as AppConstellationsConstellationIdUfaRouteRouteImport } from './routes/_app/constellations_/$constellationId/ufa/route'
import { Route as AppConstellationsConstellationIdKeywordAnalysisRouteRouteImport } from './routes/_app/constellations_/$constellationId/keyword-analysis/route'
import { Route as AppConstellationsConstellationIdCollocationAnalysisRouteRouteImport } from './routes/_app/constellations_/$constellationId/collocation-analysis/route'
import { Route as AppConstellationsConstellationIdBreakdownRouteRouteImport } from './routes/_app/constellations_/$constellationId/breakdown/route'
import { Route as AppConstellationsConstellationIdAssociationsRouteRouteImport } from './routes/_app/constellations_/$constellationId/associations/route'
import { Route as AppConstellationsConstellationIdUfaSemanticMapRouteImport } from './routes/_app/constellations_/$constellationId/ufa/semantic-map'
import { Route as AppConstellationsConstellationIdKeywordAnalysisSemanticMapRouteImport } from './routes/_app/constellations_/$constellationId/keyword-analysis/semantic-map'
import { Route as AppConstellationsConstellationIdCollocationAnalysisSemanticMapRouteImport } from './routes/_app/constellations_/$constellationId/collocation-analysis/semantic-map'

const LogoutLazyRouteImport = createFileRoute('/logout')()
const AppDiscoursemesNewLazyRouteImport = createFileRoute(
  '/_app/discoursemes_/new',
)()

const LogoutLazyRoute = LogoutLazyRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/logout.lazy').then((d) => d.Route))
const VignetteRoute = VignetteRouteImport.update({
  id: '/vignette',
  path: '/vignette',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))
const AppRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/_app.lazy').then((d) => d.Route))
const Char42Route = Char42RouteImport.update({
  id: '/*',
  path: '/*',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsRouteRoute = ComponentsRouteRouteImport.update({
  id: '/components_',
  path: '/components',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ComponentsWordCloudRoute = ComponentsWordCloudRouteImport.update({
  id: '/word-cloud',
  path: '/word-cloud',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsTooltipRoute = ComponentsTooltipRouteImport.update({
  id: '/tooltip',
  path: '/tooltip',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsToggleBarRoute = ComponentsToggleBarRouteImport.update({
  id: '/toggle-bar',
  path: '/toggle-bar',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsTimeSeriesRoute = ComponentsTimeSeriesRouteImport.update({
  id: '/time-series',
  path: '/time-series',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsTableRoute = ComponentsTableRouteImport.update({
  id: '/table',
  path: '/table',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsMetaFrequencyRoute = ComponentsMetaFrequencyRouteImport.update({
  id: '/meta-frequency',
  path: '/meta-frequency',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsMeasureRoute = ComponentsMeasureRouteImport.update({
  id: '/measure',
  path: '/measure',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsInputRoute = ComponentsInputRouteImport.update({
  id: '/input',
  path: '/input',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsGraphRoute = ComponentsGraphRouteImport.update({
  id: '/graph',
  path: '/graph',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsErrorRoute = ComponentsErrorRouteImport.update({
  id: '/error',
  path: '/error',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsEllipsisRoute = ComponentsEllipsisRouteImport.update({
  id: '/ellipsis',
  path: '/ellipsis',
  getParentRoute: () => ComponentsRouteRoute,
} as any)
const ComponentsDiscoursemeCollocateTableRoute =
  ComponentsDiscoursemeCollocateTableRouteImport.update({
    id: '/discourseme-collocate-table',
    path: '/discourseme-collocate-table',
    getParentRoute: () => ComponentsRouteRoute,
  } as any)
const ComponentsDiscoursemeBreakdownRoute =
  ComponentsDiscoursemeBreakdownRouteImport.update({
    id: '/discourseme-breakdown',
    path: '/discourseme-breakdown',
    getParentRoute: () => ComponentsRouteRoute,
  } as any)
const ComponentsAssociationMatrixRoute =
  ComponentsAssociationMatrixRouteImport.update({
    id: '/association-matrix',
    path: '/association-matrix',
    getParentRoute: () => ComponentsRouteRoute,
  } as any)
const AppAdminRoute = AppAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AppRoute,
} as any)
const AppSubcorporaRouteRoute = AppSubcorporaRouteRouteImport.update({
  id: '/subcorpora',
  path: '/subcorpora',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/subcorpora/route.lazy').then((d) => d.Route),
)
const AppQueriesRouteRoute = AppQueriesRouteRouteImport.update({
  id: '/queries',
  path: '/queries',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/queries/route.lazy').then((d) => d.Route),
)
const AppPartitionRouteRoute = AppPartitionRouteRouteImport.update({
  id: '/partition',
  path: '/partition',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/partition/route.lazy').then((d) => d.Route),
)
const AppKeywordAnalysisRouteRoute = AppKeywordAnalysisRouteRouteImport.update({
  id: '/keyword-analysis',
  path: '/keyword-analysis',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/keyword-analysis/route.lazy').then((d) => d.Route),
)
const AppDiscoursemesRouteRoute = AppDiscoursemesRouteRouteImport.update({
  id: '/discoursemes',
  path: '/discoursemes',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/discoursemes/route.lazy').then((d) => d.Route),
)
const AppCorporaRouteRoute = AppCorporaRouteRouteImport.update({
  id: '/corpora',
  path: '/corpora',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/corpora/route.lazy').then((d) => d.Route),
)
const AppConstellationsRouteRoute = AppConstellationsRouteRouteImport.update({
  id: '/constellations',
  path: '/constellations',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/constellations/route.lazy').then((d) => d.Route),
)
const AppDiscoursemesNewLazyRoute = AppDiscoursemesNewLazyRouteImport.update({
  id: '/discoursemes_/new',
  path: '/discoursemes/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/discoursemes_/new.lazy').then((d) => d.Route),
)
const ComponentsWordCloudFullRoute = ComponentsWordCloudFullRouteImport.update({
  id: '/components/word-cloud/full',
  path: '/components/word-cloud/full',
  getParentRoute: () => rootRouteImport,
} as any)
const AppSubcorporaNewRoute = AppSubcorporaNewRouteImport.update({
  id: '/subcorpora_/new',
  path: '/subcorpora/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/subcorpora_/new.lazy').then((d) => d.Route),
)
const AppSubcorporaSubcorpusIdRoute =
  AppSubcorporaSubcorpusIdRouteImport.update({
    id: '/subcorpora_/$subcorpusId',
    path: '/subcorpora/$subcorpusId',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./routes/_app/subcorpora_/$subcorpusId.lazy').then((d) => d.Route),
  )
const AppQueriesNewRoute = AppQueriesNewRouteImport.update({
  id: '/queries_/new',
  path: '/queries/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/queries_/new.lazy').then((d) => d.Route),
)
const AppKeywordAnalysisNewRoute = AppKeywordAnalysisNewRouteImport.update({
  id: '/keyword-analysis_/new',
  path: '/keyword-analysis/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/keyword-analysis_/new.lazy').then((d) => d.Route),
)
const AppDiscoursemesDiscoursemeIdRoute =
  AppDiscoursemesDiscoursemeIdRouteImport.update({
    id: '/discoursemes_/$discoursemeId',
    path: '/discoursemes/$discoursemeId',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./routes/_app/discoursemes_/$discoursemeId.lazy').then(
      (d) => d.Route,
    ),
  )
const AppCorporaCorpusIdRoute = AppCorporaCorpusIdRouteImport.update({
  id: '/corpora_/$corpusId',
  path: '/corpora/$corpusId',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/corpora_/$corpusId.lazy').then((d) => d.Route),
)
const AppConstellationsNewRoute = AppConstellationsNewRouteImport.update({
  id: '/constellations_/new',
  path: '/constellations/new',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/constellations_/new.lazy').then((d) => d.Route),
)
const AppQueriesQueryIdRouteRoute = AppQueriesQueryIdRouteRouteImport.update({
  id: '/queries_/$queryId',
  path: '/queries/$queryId',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/queries_/$queryId/route.lazy').then((d) => d.Route),
)
const AppKeywordAnalysisAnalysisIdRouteRoute =
  AppKeywordAnalysisAnalysisIdRouteRouteImport.update({
    id: '/keyword-analysis_/$analysisId',
    path: '/keyword-analysis/$analysisId',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./routes/_app/keyword-analysis_/$analysisId/route.lazy').then(
      (d) => d.Route,
    ),
  )
const AppConstellationsConstellationIdRouteRoute =
  AppConstellationsConstellationIdRouteRouteImport.update({
    id: '/constellations_/$constellationId',
    path: '/constellations/$constellationId',
    getParentRoute: () => AppRoute,
  } as any).lazy(() =>
    import('./routes/_app/constellations_/$constellationId/route.lazy').then(
      (d) => d.Route,
    ),
  )
const AppQueriesQueryIdSemanticMapRoute =
  AppQueriesQueryIdSemanticMapRouteImport.update({
    id: '/semantic-map',
    path: '/semantic-map',
    getParentRoute: () => AppQueriesQueryIdRouteRoute,
  } as any)
const AppKeywordAnalysisAnalysisIdSemanticMapRoute =
  AppKeywordAnalysisAnalysisIdSemanticMapRouteImport.update({
    id: '/semantic-map',
    path: '/semantic-map',
    getParentRoute: () => AppKeywordAnalysisAnalysisIdRouteRoute,
  } as any)
const AppConstellationsConstellationIdUfaRouteRoute =
  AppConstellationsConstellationIdUfaRouteRouteImport.update({
    id: '/ufa',
    path: '/ufa',
    getParentRoute: () => AppConstellationsConstellationIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_app/constellations_/$constellationId/ufa/route.lazy'
    ).then((d) => d.Route),
  )
const AppConstellationsConstellationIdKeywordAnalysisRouteRoute =
  AppConstellationsConstellationIdKeywordAnalysisRouteRouteImport.update({
    id: '/keyword-analysis',
    path: '/keyword-analysis',
    getParentRoute: () => AppConstellationsConstellationIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_app/constellations_/$constellationId/keyword-analysis/route.lazy'
    ).then((d) => d.Route),
  )
const AppConstellationsConstellationIdCollocationAnalysisRouteRoute =
  AppConstellationsConstellationIdCollocationAnalysisRouteRouteImport.update({
    id: '/collocation-analysis',
    path: '/collocation-analysis',
    getParentRoute: () => AppConstellationsConstellationIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_app/constellations_/$constellationId/collocation-analysis/route.lazy'
    ).then((d) => d.Route),
  )
const AppConstellationsConstellationIdBreakdownRouteRoute =
  AppConstellationsConstellationIdBreakdownRouteRouteImport.update({
    id: '/breakdown',
    path: '/breakdown',
    getParentRoute: () => AppConstellationsConstellationIdRouteRoute,
  } as any)
const AppConstellationsConstellationIdAssociationsRouteRoute =
  AppConstellationsConstellationIdAssociationsRouteRouteImport.update({
    id: '/associations',
    path: '/associations',
    getParentRoute: () => AppConstellationsConstellationIdRouteRoute,
  } as any).lazy(() =>
    import(
      './routes/_app/constellations_/$constellationId/associations/route.lazy'
    ).then((d) => d.Route),
  )
const AppConstellationsConstellationIdUfaSemanticMapRoute =
  AppConstellationsConstellationIdUfaSemanticMapRouteImport.update({
    id: '/semantic-map',
    path: '/semantic-map',
    getParentRoute: () => AppConstellationsConstellationIdUfaRouteRoute,
  } as any)
const AppConstellationsConstellationIdKeywordAnalysisSemanticMapRoute =
  AppConstellationsConstellationIdKeywordAnalysisSemanticMapRouteImport.update({
    id: '/semantic-map',
    path: '/semantic-map',
    getParentRoute: () =>
      AppConstellationsConstellationIdKeywordAnalysisRouteRoute,
  } as any)
const AppConstellationsConstellationIdCollocationAnalysisSemanticMapRoute =
  AppConstellationsConstellationIdCollocationAnalysisSemanticMapRouteImport.update(
    {
      id: '/semantic-map',
      path: '/semantic-map',
      getParentRoute: () =>
        AppConstellationsConstellationIdCollocationAnalysisRouteRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/components': typeof ComponentsRouteRouteWithChildren
  '/*': typeof Char42Route
  '/login': typeof LoginRoute
  '/vignette': typeof VignetteRoute
  '/logout': typeof LogoutLazyRoute
  '/constellations': typeof AppConstellationsRouteRoute
  '/corpora': typeof AppCorporaRouteRoute
  '/discoursemes': typeof AppDiscoursemesRouteRoute
  '/keyword-analysis': typeof AppKeywordAnalysisRouteRoute
  '/partition': typeof AppPartitionRouteRoute
  '/queries': typeof AppQueriesRouteRoute
  '/subcorpora': typeof AppSubcorporaRouteRoute
  '/admin': typeof AppAdminRoute
  '/components/association-matrix': typeof ComponentsAssociationMatrixRoute
  '/components/discourseme-breakdown': typeof ComponentsDiscoursemeBreakdownRoute
  '/components/discourseme-collocate-table': typeof ComponentsDiscoursemeCollocateTableRoute
  '/components/ellipsis': typeof ComponentsEllipsisRoute
  '/components/error': typeof ComponentsErrorRoute
  '/components/graph': typeof ComponentsGraphRoute
  '/components/input': typeof ComponentsInputRoute
  '/components/measure': typeof ComponentsMeasureRoute
  '/components/meta-frequency': typeof ComponentsMetaFrequencyRoute
  '/components/table': typeof ComponentsTableRoute
  '/components/time-series': typeof ComponentsTimeSeriesRoute
  '/components/toggle-bar': typeof ComponentsToggleBarRoute
  '/components/tooltip': typeof ComponentsTooltipRoute
  '/components/word-cloud': typeof ComponentsWordCloudRoute
  '/constellations/$constellationId': typeof AppConstellationsConstellationIdRouteRouteWithChildren
  '/keyword-analysis/$analysisId': typeof AppKeywordAnalysisAnalysisIdRouteRouteWithChildren
  '/queries/$queryId': typeof AppQueriesQueryIdRouteRouteWithChildren
  '/constellations/new': typeof AppConstellationsNewRoute
  '/corpora/$corpusId': typeof AppCorporaCorpusIdRoute
  '/discoursemes/$discoursemeId': typeof AppDiscoursemesDiscoursemeIdRoute
  '/keyword-analysis/new': typeof AppKeywordAnalysisNewRoute
  '/queries/new': typeof AppQueriesNewRoute
  '/subcorpora/$subcorpusId': typeof AppSubcorporaSubcorpusIdRoute
  '/subcorpora/new': typeof AppSubcorporaNewRoute
  '/components/word-cloud/full': typeof ComponentsWordCloudFullRoute
  '/discoursemes/new': typeof AppDiscoursemesNewLazyRoute
  '/constellations/$constellationId/associations': typeof AppConstellationsConstellationIdAssociationsRouteRoute
  '/constellations/$constellationId/breakdown': typeof AppConstellationsConstellationIdBreakdownRouteRoute
  '/constellations/$constellationId/collocation-analysis': typeof AppConstellationsConstellationIdCollocationAnalysisRouteRouteWithChildren
  '/constellations/$constellationId/keyword-analysis': typeof AppConstellationsConstellationIdKeywordAnalysisRouteRouteWithChildren
  '/constellations/$constellationId/ufa': typeof AppConstellationsConstellationIdUfaRouteRouteWithChildren
  '/keyword-analysis/$analysisId/semantic-map': typeof AppKeywordAnalysisAnalysisIdSemanticMapRoute
  '/queries/$queryId/semantic-map': typeof AppQueriesQueryIdSemanticMapRoute
  '/constellations/$constellationId/collocation-analysis/semantic-map': typeof AppConstellationsConstellationIdCollocationAnalysisSemanticMapRoute
  '/constellations/$constellationId/keyword-analysis/semantic-map': typeof AppConstellationsConstellationIdKeywordAnalysisSemanticMapRoute
  '/constellations/$constellationId/ufa/semantic-map': typeof AppConstellationsConstellationIdUfaSemanticMapRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/components': typeof ComponentsRouteRouteWithChildren
  '/*': typeof Char42Route
  '/login': typeof LoginRoute
  '/vignette': typeof VignetteRoute
  '/logout': typeof LogoutLazyRoute
  '/constellations': typeof AppConstellationsRouteRoute
  '/corpora': typeof AppCorporaRouteRoute
  '/discoursemes': typeof AppDiscoursemesRouteRoute
  '/keyword-analysis': typeof AppKeywordAnalysisRouteRoute
  '/partition': typeof AppPartitionRouteRoute
  '/queries': typeof AppQueriesRouteRoute
  '/subcorpora': typeof AppSubcorporaRouteRoute
  '/admin': typeof AppAdminRoute
  '/components/association-matrix': typeof ComponentsAssociationMatrixRoute
  '/components/discourseme-breakdown': typeof ComponentsDiscoursemeBreakdownRoute
  '/components/discourseme-collocate-table': typeof ComponentsDiscoursemeCollocateTableRoute
  '/components/ellipsis': typeof ComponentsEllipsisRoute
  '/components/error': typeof ComponentsErrorRoute
  '/components/graph': typeof ComponentsGraphRoute
  '/components/input': typeof ComponentsInputRoute
  '/components/measure': typeof ComponentsMeasureRoute
  '/components/meta-frequency': typeof ComponentsMetaFrequencyRoute
  '/components/table': typeof ComponentsTableRoute
  '/components/time-series': typeof ComponentsTimeSeriesRoute
  '/components/toggle-bar': typeof ComponentsToggleBarRoute
  '/components/tooltip': typeof ComponentsTooltipRoute
  '/components/word-cloud': typeof ComponentsWordCloudRoute
  '/constellations/$constellationId': typeof AppConstellationsConstellationIdRouteRouteWithChildren
  '/keyword-analysis/$analysisId': typeof AppKeywordAnalysisAnalysisIdRouteRouteWithChildren
  '/queries/$queryId': typeof AppQueriesQueryIdRouteRouteWithChildren
  '/constellations/new': typeof AppConstellationsNewRoute
  '/corpora/$corpusId': typeof AppCorporaCorpusIdRoute
  '/discoursemes/$discoursemeId': typeof AppDiscoursemesDiscoursemeIdRoute
  '/keyword-analysis/new': typeof AppKeywordAnalysisNewRoute
  '/queries/new': typeof AppQueriesNewRoute
  '/subcorpora/$subcorpusId': typeof AppSubcorporaSubcorpusIdRoute
  '/subcorpora/new': typeof AppSubcorporaNewRoute
  '/components/word-cloud/full': typeof ComponentsWordCloudFullRoute
  '/discoursemes/new': typeof AppDiscoursemesNewLazyRoute
  '/constellations/$constellationId/associations': typeof AppConstellationsConstellationIdAssociationsRouteRoute
  '/constellations/$constellationId/breakdown': typeof AppConstellationsConstellationIdBreakdownRouteRoute
  '/constellations/$constellationId/collocation-analysis': typeof AppConstellationsConstellationIdCollocationAnalysisRouteRouteWithChildren
  '/constellations/$constellationId/keyword-analysis': typeof AppConstellationsConstellationIdKeywordAnalysisRouteRouteWithChildren
  '/constellations/$constellationId/ufa': typeof AppConstellationsConstellationIdUfaRouteRouteWithChildren
  '/keyword-analysis/$analysisId/semantic-map': typeof AppKeywordAnalysisAnalysisIdSemanticMapRoute
  '/queries/$queryId/semantic-map': typeof AppQueriesQueryIdSemanticMapRoute
  '/constellations/$constellationId/collocation-analysis/semantic-map': typeof AppConstellationsConstellationIdCollocationAnalysisSemanticMapRoute
  '/constellations/$constellationId/keyword-analysis/semantic-map': typeof AppConstellationsConstellationIdKeywordAnalysisSemanticMapRoute
  '/constellations/$constellationId/ufa/semantic-map': typeof AppConstellationsConstellationIdUfaSemanticMapRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/components_': typeof ComponentsRouteRouteWithChildren
  '/*': typeof Char42Route
  '/_app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/vignette': typeof VignetteRoute
  '/logout': typeof LogoutLazyRoute
  '/_app/constellations': typeof AppConstellationsRouteRoute
  '/_app/corpora': typeof AppCorporaRouteRoute
  '/_app/discoursemes': typeof AppDiscoursemesRouteRoute
  '/_app/keyword-analysis': typeof AppKeywordAnalysisRouteRoute
  '/_app/partition': typeof AppPartitionRouteRoute
  '/_app/queries': typeof AppQueriesRouteRoute
  '/_app/subcorpora': typeof AppSubcorporaRouteRoute
  '/_app/admin': typeof AppAdminRoute
  '/components_/association-matrix': typeof ComponentsAssociationMatrixRoute
  '/components_/discourseme-breakdown': typeof ComponentsDiscoursemeBreakdownRoute
  '/components_/discourseme-collocate-table': typeof ComponentsDiscoursemeCollocateTableRoute
  '/components_/ellipsis': typeof ComponentsEllipsisRoute
  '/components_/error': typeof ComponentsErrorRoute
  '/components_/graph': typeof ComponentsGraphRoute
  '/components_/input': typeof ComponentsInputRoute
  '/components_/measure': typeof ComponentsMeasureRoute
  '/components_/meta-frequency': typeof ComponentsMetaFrequencyRoute
  '/components_/table': typeof ComponentsTableRoute
  '/components_/time-series': typeof ComponentsTimeSeriesRoute
  '/components_/toggle-bar': typeof ComponentsToggleBarRoute
  '/components_/tooltip': typeof ComponentsTooltipRoute
  '/components_/word-cloud': typeof ComponentsWordCloudRoute
  '/_app/constellations_/$constellationId': typeof AppConstellationsConstellationIdRouteRouteWithChildren
  '/_app/keyword-analysis_/$analysisId': typeof AppKeywordAnalysisAnalysisIdRouteRouteWithChildren
  '/_app/queries_/$queryId': typeof AppQueriesQueryIdRouteRouteWithChildren
  '/_app/constellations_/new': typeof AppConstellationsNewRoute
  '/_app/corpora_/$corpusId': typeof AppCorporaCorpusIdRoute
  '/_app/discoursemes_/$discoursemeId': typeof AppDiscoursemesDiscoursemeIdRoute
  '/_app/keyword-analysis_/new': typeof AppKeywordAnalysisNewRoute
  '/_app/queries_/new': typeof AppQueriesNewRoute
  '/_app/subcorpora_/$subcorpusId': typeof AppSubcorporaSubcorpusIdRoute
  '/_app/subcorpora_/new': typeof AppSubcorporaNewRoute
  '/components/word-cloud/full': typeof ComponentsWordCloudFullRoute
  '/_app/discoursemes_/new': typeof AppDiscoursemesNewLazyRoute
  '/_app/constellations_/$constellationId/associations': typeof AppConstellationsConstellationIdAssociationsRouteRoute
  '/_app/constellations_/$constellationId/breakdown': typeof AppConstellationsConstellationIdBreakdownRouteRoute
  '/_app/constellations_/$constellationId/collocation-analysis': typeof AppConstellationsConstellationIdCollocationAnalysisRouteRouteWithChildren
  '/_app/constellations_/$constellationId/keyword-analysis': typeof AppConstellationsConstellationIdKeywordAnalysisRouteRouteWithChildren
  '/_app/constellations_/$constellationId/ufa': typeof AppConstellationsConstellationIdUfaRouteRouteWithChildren
  '/_app/keyword-analysis_/$analysisId/semantic-map': typeof AppKeywordAnalysisAnalysisIdSemanticMapRoute
  '/_app/queries_/$queryId/semantic-map': typeof AppQueriesQueryIdSemanticMapRoute
  '/_app/constellations_/$constellationId/collocation-analysis/semantic-map': typeof AppConstellationsConstellationIdCollocationAnalysisSemanticMapRoute
  '/_app/constellations_/$constellationId/keyword-analysis/semantic-map': typeof AppConstellationsConstellationIdKeywordAnalysisSemanticMapRoute
  '/_app/constellations_/$constellationId/ufa/semantic-map': typeof AppConstellationsConstellationIdUfaSemanticMapRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/components'
    | '/*'
    | '/login'
    | '/vignette'
    | '/logout'
    | '/constellations'
    | '/corpora'
    | '/discoursemes'
    | '/keyword-analysis'
    | '/partition'
    | '/queries'
    | '/subcorpora'
    | '/admin'
    | '/components/association-matrix'
    | '/components/discourseme-breakdown'
    | '/components/discourseme-collocate-table'
    | '/components/ellipsis'
    | '/components/error'
    | '/components/graph'
    | '/components/input'
    | '/components/measure'
    | '/components/meta-frequency'
    | '/components/table'
    | '/components/time-series'
    | '/components/toggle-bar'
    | '/components/tooltip'
    | '/components/word-cloud'
    | '/constellations/$constellationId'
    | '/keyword-analysis/$analysisId'
    | '/queries/$queryId'
    | '/constellations/new'
    | '/corpora/$corpusId'
    | '/discoursemes/$discoursemeId'
    | '/keyword-analysis/new'
    | '/queries/new'
    | '/subcorpora/$subcorpusId'
    | '/subcorpora/new'
    | '/components/word-cloud/full'
    | '/discoursemes/new'
    | '/constellations/$constellationId/associations'
    | '/constellations/$constellationId/breakdown'
    | '/constellations/$constellationId/collocation-analysis'
    | '/constellations/$constellationId/keyword-analysis'
    | '/constellations/$constellationId/ufa'
    | '/keyword-analysis/$analysisId/semantic-map'
    | '/queries/$queryId/semantic-map'
    | '/constellations/$constellationId/collocation-analysis/semantic-map'
    | '/constellations/$constellationId/keyword-analysis/semantic-map'
    | '/constellations/$constellationId/ufa/semantic-map'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/components'
    | '/*'
    | '/login'
    | '/vignette'
    | '/logout'
    | '/constellations'
    | '/corpora'
    | '/discoursemes'
    | '/keyword-analysis'
    | '/partition'
    | '/queries'
    | '/subcorpora'
    | '/admin'
    | '/components/association-matrix'
    | '/components/discourseme-breakdown'
    | '/components/discourseme-collocate-table'
    | '/components/ellipsis'
    | '/components/error'
    | '/components/graph'
    | '/components/input'
    | '/components/measure'
    | '/components/meta-frequency'
    | '/components/table'
    | '/components/time-series'
    | '/components/toggle-bar'
    | '/components/tooltip'
    | '/components/word-cloud'
    | '/constellations/$constellationId'
    | '/keyword-analysis/$analysisId'
    | '/queries/$queryId'
    | '/constellations/new'
    | '/corpora/$corpusId'
    | '/discoursemes/$discoursemeId'
    | '/keyword-analysis/new'
    | '/queries/new'
    | '/subcorpora/$subcorpusId'
    | '/subcorpora/new'
    | '/components/word-cloud/full'
    | '/discoursemes/new'
    | '/constellations/$constellationId/associations'
    | '/constellations/$constellationId/breakdown'
    | '/constellations/$constellationId/collocation-analysis'
    | '/constellations/$constellationId/keyword-analysis'
    | '/constellations/$constellationId/ufa'
    | '/keyword-analysis/$analysisId/semantic-map'
    | '/queries/$queryId/semantic-map'
    | '/constellations/$constellationId/collocation-analysis/semantic-map'
    | '/constellations/$constellationId/keyword-analysis/semantic-map'
    | '/constellations/$constellationId/ufa/semantic-map'
  id:
    | '__root__'
    | '/'
    | '/components_'
    | '/*'
    | '/_app'
    | '/login'
    | '/vignette'
    | '/logout'
    | '/_app/constellations'
    | '/_app/corpora'
    | '/_app/discoursemes'
    | '/_app/keyword-analysis'
    | '/_app/partition'
    | '/_app/queries'
    | '/_app/subcorpora'
    | '/_app/admin'
    | '/components_/association-matrix'
    | '/components_/discourseme-breakdown'
    | '/components_/discourseme-collocate-table'
    | '/components_/ellipsis'
    | '/components_/error'
    | '/components_/graph'
    | '/components_/input'
    | '/components_/measure'
    | '/components_/meta-frequency'
    | '/components_/table'
    | '/components_/time-series'
    | '/components_/toggle-bar'
    | '/components_/tooltip'
    | '/components_/word-cloud'
    | '/_app/constellations_/$constellationId'
    | '/_app/keyword-analysis_/$analysisId'
    | '/_app/queries_/$queryId'
    | '/_app/constellations_/new'
    | '/_app/corpora_/$corpusId'
    | '/_app/discoursemes_/$discoursemeId'
    | '/_app/keyword-analysis_/new'
    | '/_app/queries_/new'
    | '/_app/subcorpora_/$subcorpusId'
    | '/_app/subcorpora_/new'
    | '/components/word-cloud/full'
    | '/_app/discoursemes_/new'
    | '/_app/constellations_/$constellationId/associations'
    | '/_app/constellations_/$constellationId/breakdown'
    | '/_app/constellations_/$constellationId/collocation-analysis'
    | '/_app/constellations_/$constellationId/keyword-analysis'
    | '/_app/constellations_/$constellationId/ufa'
    | '/_app/keyword-analysis_/$analysisId/semantic-map'
    | '/_app/queries_/$queryId/semantic-map'
    | '/_app/constellations_/$constellationId/collocation-analysis/semantic-map'
    | '/_app/constellations_/$constellationId/keyword-analysis/semantic-map'
    | '/_app/constellations_/$constellationId/ufa/semantic-map'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ComponentsRouteRoute: typeof ComponentsRouteRouteWithChildren
  Char42Route: typeof Char42Route
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
  VignetteRoute: typeof VignetteRoute
  LogoutLazyRoute: typeof LogoutLazyRoute
  ComponentsWordCloudFullRoute: typeof ComponentsWordCloudFullRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vignette': {
      id: '/vignette'
      path: '/vignette'
      fullPath: '/vignette'
      preLoaderRoute: typeof VignetteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/*': {
      id: '/*'
      path: '/*'
      fullPath: '/*'
      preLoaderRoute: typeof Char42RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components_': {
      id: '/components_'
      path: '/components'
      fullPath: '/components'
      preLoaderRoute: typeof ComponentsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/components_/word-cloud': {
      id: '/components_/word-cloud'
      path: '/word-cloud'
      fullPath: '/components/word-cloud'
      preLoaderRoute: typeof ComponentsWordCloudRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/tooltip': {
      id: '/components_/tooltip'
      path: '/tooltip'
      fullPath: '/components/tooltip'
      preLoaderRoute: typeof ComponentsTooltipRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/toggle-bar': {
      id: '/components_/toggle-bar'
      path: '/toggle-bar'
      fullPath: '/components/toggle-bar'
      preLoaderRoute: typeof ComponentsToggleBarRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/time-series': {
      id: '/components_/time-series'
      path: '/time-series'
      fullPath: '/components/time-series'
      preLoaderRoute: typeof ComponentsTimeSeriesRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/table': {
      id: '/components_/table'
      path: '/table'
      fullPath: '/components/table'
      preLoaderRoute: typeof ComponentsTableRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/meta-frequency': {
      id: '/components_/meta-frequency'
      path: '/meta-frequency'
      fullPath: '/components/meta-frequency'
      preLoaderRoute: typeof ComponentsMetaFrequencyRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/measure': {
      id: '/components_/measure'
      path: '/measure'
      fullPath: '/components/measure'
      preLoaderRoute: typeof ComponentsMeasureRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/input': {
      id: '/components_/input'
      path: '/input'
      fullPath: '/components/input'
      preLoaderRoute: typeof ComponentsInputRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/graph': {
      id: '/components_/graph'
      path: '/graph'
      fullPath: '/components/graph'
      preLoaderRoute: typeof ComponentsGraphRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/error': {
      id: '/components_/error'
      path: '/error'
      fullPath: '/components/error'
      preLoaderRoute: typeof ComponentsErrorRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/ellipsis': {
      id: '/components_/ellipsis'
      path: '/ellipsis'
      fullPath: '/components/ellipsis'
      preLoaderRoute: typeof ComponentsEllipsisRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/discourseme-collocate-table': {
      id: '/components_/discourseme-collocate-table'
      path: '/discourseme-collocate-table'
      fullPath: '/components/discourseme-collocate-table'
      preLoaderRoute: typeof ComponentsDiscoursemeCollocateTableRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/discourseme-breakdown': {
      id: '/components_/discourseme-breakdown'
      path: '/discourseme-breakdown'
      fullPath: '/components/discourseme-breakdown'
      preLoaderRoute: typeof ComponentsDiscoursemeBreakdownRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/components_/association-matrix': {
      id: '/components_/association-matrix'
      path: '/association-matrix'
      fullPath: '/components/association-matrix'
      preLoaderRoute: typeof ComponentsAssociationMatrixRouteImport
      parentRoute: typeof ComponentsRouteRoute
    }
    '/_app/admin': {
      id: '/_app/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AppAdminRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/subcorpora': {
      id: '/_app/subcorpora'
      path: '/subcorpora'
      fullPath: '/subcorpora'
      preLoaderRoute: typeof AppSubcorporaRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/queries': {
      id: '/_app/queries'
      path: '/queries'
      fullPath: '/queries'
      preLoaderRoute: typeof AppQueriesRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/partition': {
      id: '/_app/partition'
      path: '/partition'
      fullPath: '/partition'
      preLoaderRoute: typeof AppPartitionRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/keyword-analysis': {
      id: '/_app/keyword-analysis'
      path: '/keyword-analysis'
      fullPath: '/keyword-analysis'
      preLoaderRoute: typeof AppKeywordAnalysisRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/discoursemes': {
      id: '/_app/discoursemes'
      path: '/discoursemes'
      fullPath: '/discoursemes'
      preLoaderRoute: typeof AppDiscoursemesRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/corpora': {
      id: '/_app/corpora'
      path: '/corpora'
      fullPath: '/corpora'
      preLoaderRoute: typeof AppCorporaRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/constellations': {
      id: '/_app/constellations'
      path: '/constellations'
      fullPath: '/constellations'
      preLoaderRoute: typeof AppConstellationsRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/discoursemes_/new': {
      id: '/_app/discoursemes_/new'
      path: '/discoursemes/new'
      fullPath: '/discoursemes/new'
      preLoaderRoute: typeof AppDiscoursemesNewLazyRouteImport
      parentRoute: typeof AppRoute
    }
    '/components/word-cloud/full': {
      id: '/components/word-cloud/full'
      path: '/components/word-cloud/full'
      fullPath: '/components/word-cloud/full'
      preLoaderRoute: typeof ComponentsWordCloudFullRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/subcorpora_/new': {
      id: '/_app/subcorpora_/new'
      path: '/subcorpora/new'
      fullPath: '/subcorpora/new'
      preLoaderRoute: typeof AppSubcorporaNewRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/subcorpora_/$subcorpusId': {
      id: '/_app/subcorpora_/$subcorpusId'
      path: '/subcorpora/$subcorpusId'
      fullPath: '/subcorpora/$subcorpusId'
      preLoaderRoute: typeof AppSubcorporaSubcorpusIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/queries_/new': {
      id: '/_app/queries_/new'
      path: '/queries/new'
      fullPath: '/queries/new'
      preLoaderRoute: typeof AppQueriesNewRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/keyword-analysis_/new': {
      id: '/_app/keyword-analysis_/new'
      path: '/keyword-analysis/new'
      fullPath: '/keyword-analysis/new'
      preLoaderRoute: typeof AppKeywordAnalysisNewRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/discoursemes_/$discoursemeId': {
      id: '/_app/discoursemes_/$discoursemeId'
      path: '/discoursemes/$discoursemeId'
      fullPath: '/discoursemes/$discoursemeId'
      preLoaderRoute: typeof AppDiscoursemesDiscoursemeIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/corpora_/$corpusId': {
      id: '/_app/corpora_/$corpusId'
      path: '/corpora/$corpusId'
      fullPath: '/corpora/$corpusId'
      preLoaderRoute: typeof AppCorporaCorpusIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/constellations_/new': {
      id: '/_app/constellations_/new'
      path: '/constellations/new'
      fullPath: '/constellations/new'
      preLoaderRoute: typeof AppConstellationsNewRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/queries_/$queryId': {
      id: '/_app/queries_/$queryId'
      path: '/queries/$queryId'
      fullPath: '/queries/$queryId'
      preLoaderRoute: typeof AppQueriesQueryIdRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/keyword-analysis_/$analysisId': {
      id: '/_app/keyword-analysis_/$analysisId'
      path: '/keyword-analysis/$analysisId'
      fullPath: '/keyword-analysis/$analysisId'
      preLoaderRoute: typeof AppKeywordAnalysisAnalysisIdRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/constellations_/$constellationId': {
      id: '/_app/constellations_/$constellationId'
      path: '/constellations/$constellationId'
      fullPath: '/constellations/$constellationId'
      preLoaderRoute: typeof AppConstellationsConstellationIdRouteRouteImport
      parentRoute: typeof AppRoute
    }
    '/_app/queries_/$queryId/semantic-map': {
      id: '/_app/queries_/$queryId/semantic-map'
      path: '/semantic-map'
      fullPath: '/queries/$queryId/semantic-map'
      preLoaderRoute: typeof AppQueriesQueryIdSemanticMapRouteImport
      parentRoute: typeof AppQueriesQueryIdRouteRoute
    }
    '/_app/keyword-analysis_/$analysisId/semantic-map': {
      id: '/_app/keyword-analysis_/$analysisId/semantic-map'
      path: '/semantic-map'
      fullPath: '/keyword-analysis/$analysisId/semantic-map'
      preLoaderRoute: typeof AppKeywordAnalysisAnalysisIdSemanticMapRouteImport
      parentRoute: typeof AppKeywordAnalysisAnalysisIdRouteRoute
    }
    '/_app/constellations_/$constellationId/ufa': {
      id: '/_app/constellations_/$constellationId/ufa'
      path: '/ufa'
      fullPath: '/constellations/$constellationId/ufa'
      preLoaderRoute: typeof AppConstellationsConstellationIdUfaRouteRouteImport
      parentRoute: typeof AppConstellationsConstellationIdRouteRoute
    }
    '/_app/constellations_/$constellationId/keyword-analysis': {
      id: '/_app/constellations_/$constellationId/keyword-analysis'
      path: '/keyword-analysis'
      fullPath: '/constellations/$constellationId/keyword-analysis'
      preLoaderRoute: typeof AppConstellationsConstellationIdKeywordAnalysisRouteRouteImport
      parentRoute: typeof AppConstellationsConstellationIdRouteRoute
    }
    '/_app/constellations_/$constellationId/collocation-analysis': {
      id: '/_app/constellations_/$constellationId/collocation-analysis'
      path: '/collocation-analysis'
      fullPath: '/constellations/$constellationId/collocation-analysis'
      preLoaderRoute: typeof AppConstellationsConstellationIdCollocationAnalysisRouteRouteImport
      parentRoute: typeof AppConstellationsConstellationIdRouteRoute
    }
    '/_app/constellations_/$constellationId/breakdown': {
      id: '/_app/constellations_/$constellationId/breakdown'
      path: '/breakdown'
      fullPath: '/constellations/$constellationId/breakdown'
      preLoaderRoute: typeof AppConstellationsConstellationIdBreakdownRouteRouteImport
      parentRoute: typeof AppConstellationsConstellationIdRouteRoute
    }
    '/_app/constellations_/$constellationId/associations': {
      id: '/_app/constellations_/$constellationId/associations'
      path: '/associations'
      fullPath: '/constellations/$constellationId/associations'
      preLoaderRoute: typeof AppConstellationsConstellationIdAssociationsRouteRouteImport
      parentRoute: typeof AppConstellationsConstellationIdRouteRoute
    }
    '/_app/constellations_/$constellationId/ufa/semantic-map': {
      id: '/_app/constellations_/$constellationId/ufa/semantic-map'
      path: '/semantic-map'
      fullPath: '/constellations/$constellationId/ufa/semantic-map'
      preLoaderRoute: typeof AppConstellationsConstellationIdUfaSemanticMapRouteImport
      parentRoute: typeof AppConstellationsConstellationIdUfaRouteRoute
    }
    '/_app/constellations_/$constellationId/keyword-analysis/semantic-map': {
      id: '/_app/constellations_/$constellationId/keyword-analysis/semantic-map'
      path: '/semantic-map'
      fullPath: '/constellations/$constellationId/keyword-analysis/semantic-map'
      preLoaderRoute: typeof AppConstellationsConstellationIdKeywordAnalysisSemanticMapRouteImport
      parentRoute: typeof AppConstellationsConstellationIdKeywordAnalysisRouteRoute
    }
    '/_app/constellations_/$constellationId/collocation-analysis/semantic-map': {
      id: '/_app/constellations_/$constellationId/collocation-analysis/semantic-map'
      path: '/semantic-map'
      fullPath: '/constellations/$constellationId/collocation-analysis/semantic-map'
      preLoaderRoute: typeof AppConstellationsConstellationIdCollocationAnalysisSemanticMapRouteImport
      parentRoute: typeof AppConstellationsConstellationIdCollocationAnalysisRouteRoute
    }
  }
}

interface ComponentsRouteRouteChildren {
  ComponentsAssociationMatrixRoute: typeof ComponentsAssociationMatrixRoute
  ComponentsDiscoursemeBreakdownRoute: typeof ComponentsDiscoursemeBreakdownRoute
  ComponentsDiscoursemeCollocateTableRoute: typeof ComponentsDiscoursemeCollocateTableRoute
  ComponentsEllipsisRoute: typeof ComponentsEllipsisRoute
  ComponentsErrorRoute: typeof ComponentsErrorRoute
  ComponentsGraphRoute: typeof ComponentsGraphRoute
  ComponentsInputRoute: typeof ComponentsInputRoute
  ComponentsMeasureRoute: typeof ComponentsMeasureRoute
  ComponentsMetaFrequencyRoute: typeof ComponentsMetaFrequencyRoute
  ComponentsTableRoute: typeof ComponentsTableRoute
  ComponentsTimeSeriesRoute: typeof ComponentsTimeSeriesRoute
  ComponentsToggleBarRoute: typeof ComponentsToggleBarRoute
  ComponentsTooltipRoute: typeof ComponentsTooltipRoute
  ComponentsWordCloudRoute: typeof ComponentsWordCloudRoute
}

const ComponentsRouteRouteChildren: ComponentsRouteRouteChildren = {
  ComponentsAssociationMatrixRoute: ComponentsAssociationMatrixRoute,
  ComponentsDiscoursemeBreakdownRoute: ComponentsDiscoursemeBreakdownRoute,
  ComponentsDiscoursemeCollocateTableRoute:
    ComponentsDiscoursemeCollocateTableRoute,
  ComponentsEllipsisRoute: ComponentsEllipsisRoute,
  ComponentsErrorRoute: ComponentsErrorRoute,
  ComponentsGraphRoute: ComponentsGraphRoute,
  ComponentsInputRoute: ComponentsInputRoute,
  ComponentsMeasureRoute: ComponentsMeasureRoute,
  ComponentsMetaFrequencyRoute: ComponentsMetaFrequencyRoute,
  ComponentsTableRoute: ComponentsTableRoute,
  ComponentsTimeSeriesRoute: ComponentsTimeSeriesRoute,
  ComponentsToggleBarRoute: ComponentsToggleBarRoute,
  ComponentsTooltipRoute: ComponentsTooltipRoute,
  ComponentsWordCloudRoute: ComponentsWordCloudRoute,
}

const ComponentsRouteRouteWithChildren = ComponentsRouteRoute._addFileChildren(
  ComponentsRouteRouteChildren,
)

interface AppConstellationsConstellationIdCollocationAnalysisRouteRouteChildren {
  AppConstellationsConstellationIdCollocationAnalysisSemanticMapRoute: typeof AppConstellationsConstellationIdCollocationAnalysisSemanticMapRoute
}

const AppConstellationsConstellationIdCollocationAnalysisRouteRouteChildren: AppConstellationsConstellationIdCollocationAnalysisRouteRouteChildren =
  {
    AppConstellationsConstellationIdCollocationAnalysisSemanticMapRoute:
      AppConstellationsConstellationIdCollocationAnalysisSemanticMapRoute,
  }

const AppConstellationsConstellationIdCollocationAnalysisRouteRouteWithChildren =
  AppConstellationsConstellationIdCollocationAnalysisRouteRoute._addFileChildren(
    AppConstellationsConstellationIdCollocationAnalysisRouteRouteChildren,
  )

interface AppConstellationsConstellationIdKeywordAnalysisRouteRouteChildren {
  AppConstellationsConstellationIdKeywordAnalysisSemanticMapRoute: typeof AppConstellationsConstellationIdKeywordAnalysisSemanticMapRoute
}

const AppConstellationsConstellationIdKeywordAnalysisRouteRouteChildren: AppConstellationsConstellationIdKeywordAnalysisRouteRouteChildren =
  {
    AppConstellationsConstellationIdKeywordAnalysisSemanticMapRoute:
      AppConstellationsConstellationIdKeywordAnalysisSemanticMapRoute,
  }

const AppConstellationsConstellationIdKeywordAnalysisRouteRouteWithChildren =
  AppConstellationsConstellationIdKeywordAnalysisRouteRoute._addFileChildren(
    AppConstellationsConstellationIdKeywordAnalysisRouteRouteChildren,
  )

interface AppConstellationsConstellationIdUfaRouteRouteChildren {
  AppConstellationsConstellationIdUfaSemanticMapRoute: typeof AppConstellationsConstellationIdUfaSemanticMapRoute
}

const AppConstellationsConstellationIdUfaRouteRouteChildren: AppConstellationsConstellationIdUfaRouteRouteChildren =
  {
    AppConstellationsConstellationIdUfaSemanticMapRoute:
      AppConstellationsConstellationIdUfaSemanticMapRoute,
  }

const AppConstellationsConstellationIdUfaRouteRouteWithChildren =
  AppConstellationsConstellationIdUfaRouteRoute._addFileChildren(
    AppConstellationsConstellationIdUfaRouteRouteChildren,
  )

interface AppConstellationsConstellationIdRouteRouteChildren {
  AppConstellationsConstellationIdAssociationsRouteRoute: typeof AppConstellationsConstellationIdAssociationsRouteRoute
  AppConstellationsConstellationIdBreakdownRouteRoute: typeof AppConstellationsConstellationIdBreakdownRouteRoute
  AppConstellationsConstellationIdCollocationAnalysisRouteRoute: typeof AppConstellationsConstellationIdCollocationAnalysisRouteRouteWithChildren
  AppConstellationsConstellationIdKeywordAnalysisRouteRoute: typeof AppConstellationsConstellationIdKeywordAnalysisRouteRouteWithChildren
  AppConstellationsConstellationIdUfaRouteRoute: typeof AppConstellationsConstellationIdUfaRouteRouteWithChildren
}

const AppConstellationsConstellationIdRouteRouteChildren: AppConstellationsConstellationIdRouteRouteChildren =
  {
    AppConstellationsConstellationIdAssociationsRouteRoute:
      AppConstellationsConstellationIdAssociationsRouteRoute,
    AppConstellationsConstellationIdBreakdownRouteRoute:
      AppConstellationsConstellationIdBreakdownRouteRoute,
    AppConstellationsConstellationIdCollocationAnalysisRouteRoute:
      AppConstellationsConstellationIdCollocationAnalysisRouteRouteWithChildren,
    AppConstellationsConstellationIdKeywordAnalysisRouteRoute:
      AppConstellationsConstellationIdKeywordAnalysisRouteRouteWithChildren,
    AppConstellationsConstellationIdUfaRouteRoute:
      AppConstellationsConstellationIdUfaRouteRouteWithChildren,
  }

const AppConstellationsConstellationIdRouteRouteWithChildren =
  AppConstellationsConstellationIdRouteRoute._addFileChildren(
    AppConstellationsConstellationIdRouteRouteChildren,
  )

interface AppKeywordAnalysisAnalysisIdRouteRouteChildren {
  AppKeywordAnalysisAnalysisIdSemanticMapRoute: typeof AppKeywordAnalysisAnalysisIdSemanticMapRoute
}

const AppKeywordAnalysisAnalysisIdRouteRouteChildren: AppKeywordAnalysisAnalysisIdRouteRouteChildren =
  {
    AppKeywordAnalysisAnalysisIdSemanticMapRoute:
      AppKeywordAnalysisAnalysisIdSemanticMapRoute,
  }

const AppKeywordAnalysisAnalysisIdRouteRouteWithChildren =
  AppKeywordAnalysisAnalysisIdRouteRoute._addFileChildren(
    AppKeywordAnalysisAnalysisIdRouteRouteChildren,
  )

interface AppQueriesQueryIdRouteRouteChildren {
  AppQueriesQueryIdSemanticMapRoute: typeof AppQueriesQueryIdSemanticMapRoute
}

const AppQueriesQueryIdRouteRouteChildren: AppQueriesQueryIdRouteRouteChildren =
  {
    AppQueriesQueryIdSemanticMapRoute: AppQueriesQueryIdSemanticMapRoute,
  }

const AppQueriesQueryIdRouteRouteWithChildren =
  AppQueriesQueryIdRouteRoute._addFileChildren(
    AppQueriesQueryIdRouteRouteChildren,
  )

interface AppRouteChildren {
  AppConstellationsRouteRoute: typeof AppConstellationsRouteRoute
  AppCorporaRouteRoute: typeof AppCorporaRouteRoute
  AppDiscoursemesRouteRoute: typeof AppDiscoursemesRouteRoute
  AppKeywordAnalysisRouteRoute: typeof AppKeywordAnalysisRouteRoute
  AppPartitionRouteRoute: typeof AppPartitionRouteRoute
  AppQueriesRouteRoute: typeof AppQueriesRouteRoute
  AppSubcorporaRouteRoute: typeof AppSubcorporaRouteRoute
  AppAdminRoute: typeof AppAdminRoute
  AppConstellationsConstellationIdRouteRoute: typeof AppConstellationsConstellationIdRouteRouteWithChildren
  AppKeywordAnalysisAnalysisIdRouteRoute: typeof AppKeywordAnalysisAnalysisIdRouteRouteWithChildren
  AppQueriesQueryIdRouteRoute: typeof AppQueriesQueryIdRouteRouteWithChildren
  AppConstellationsNewRoute: typeof AppConstellationsNewRoute
  AppCorporaCorpusIdRoute: typeof AppCorporaCorpusIdRoute
  AppDiscoursemesDiscoursemeIdRoute: typeof AppDiscoursemesDiscoursemeIdRoute
  AppKeywordAnalysisNewRoute: typeof AppKeywordAnalysisNewRoute
  AppQueriesNewRoute: typeof AppQueriesNewRoute
  AppSubcorporaSubcorpusIdRoute: typeof AppSubcorporaSubcorpusIdRoute
  AppSubcorporaNewRoute: typeof AppSubcorporaNewRoute
  AppDiscoursemesNewLazyRoute: typeof AppDiscoursemesNewLazyRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppConstellationsRouteRoute: AppConstellationsRouteRoute,
  AppCorporaRouteRoute: AppCorporaRouteRoute,
  AppDiscoursemesRouteRoute: AppDiscoursemesRouteRoute,
  AppKeywordAnalysisRouteRoute: AppKeywordAnalysisRouteRoute,
  AppPartitionRouteRoute: AppPartitionRouteRoute,
  AppQueriesRouteRoute: AppQueriesRouteRoute,
  AppSubcorporaRouteRoute: AppSubcorporaRouteRoute,
  AppAdminRoute: AppAdminRoute,
  AppConstellationsConstellationIdRouteRoute:
    AppConstellationsConstellationIdRouteRouteWithChildren,
  AppKeywordAnalysisAnalysisIdRouteRoute:
    AppKeywordAnalysisAnalysisIdRouteRouteWithChildren,
  AppQueriesQueryIdRouteRoute: AppQueriesQueryIdRouteRouteWithChildren,
  AppConstellationsNewRoute: AppConstellationsNewRoute,
  AppCorporaCorpusIdRoute: AppCorporaCorpusIdRoute,
  AppDiscoursemesDiscoursemeIdRoute: AppDiscoursemesDiscoursemeIdRoute,
  AppKeywordAnalysisNewRoute: AppKeywordAnalysisNewRoute,
  AppQueriesNewRoute: AppQueriesNewRoute,
  AppSubcorporaSubcorpusIdRoute: AppSubcorporaSubcorpusIdRoute,
  AppSubcorporaNewRoute: AppSubcorporaNewRoute,
  AppDiscoursemesNewLazyRoute: AppDiscoursemesNewLazyRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ComponentsRouteRoute: ComponentsRouteRouteWithChildren,
  Char42Route: Char42Route,
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
  VignetteRoute: VignetteRoute,
  LogoutLazyRoute: LogoutLazyRoute,
  ComponentsWordCloudFullRoute: ComponentsWordCloudFullRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
